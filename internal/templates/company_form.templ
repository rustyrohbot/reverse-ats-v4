package templates

import (
	"reverse-ats/internal/db"
	"fmt"
)

templ CompanyFormNew() {
	@Layout("New Company") {
		@companyFormFields(nil, false)
	}
}

templ CompanyFormEdit(company db.Company) {
	@Layout("Edit Company") {
		@companyFormFields(&company, true)
	}
}

templ companyFormFields(company *db.Company, isEdit bool) {
	<div class="max-w-2xl mx-auto">
		<div class="mb-6">
			<h1 class="text-2xl font-semibold text-gray-900">
				if isEdit {
					Edit Company
				} else {
					New Company
				}
			</h1>
		</div>
		<form
			if isEdit {
				hx-put={ fmt.Sprintf("/companies/%d", company.CompanyID) }
			} else {
				hx-post="/companies"
			}
			hx-target="body"
			class="space-y-6 bg-white shadow-sm rounded-lg p-6"
		>
			<div>
				<label for="name" class="block text-sm font-medium text-gray-700">Company Name *</label>
				<input
					type="text"
					id="name"
					name="name"
					required
					if company != nil {
						value={ company.Name }
					}
					class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm px-3 py-2 border"
				/>
			</div>
			<div>
				<label for="description" class="block text-sm font-medium text-gray-700">Description</label>
				<textarea
					id="description"
					name="description"
					rows="4"
					class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm px-3 py-2 border"
				>
					if company != nil && company.Description.Valid {
						{ company.Description.String }
					}
				</textarea>
			</div>
			<div>
				<label for="url" class="block text-sm font-medium text-gray-700">URL</label>
				<input
					type="url"
					id="url"
					name="url"
					if company != nil && company.Url.Valid {
						value={ company.Url.String }
					}
					class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm px-3 py-2 border"
				/>
			</div>
			<div class="grid grid-cols-2 gap-4">
				<div>
					<label for="hq_city" class="block text-sm font-medium text-gray-700">HQ City</label>
					<input
						type="text"
						id="hq_city"
						name="hq_city"
						if company != nil && company.HqCity.Valid {
							value={ company.HqCity.String }
						}
						class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm px-3 py-2 border"
					/>
				</div>
				<div>
					<label for="hq_state" class="block text-sm font-medium text-gray-700">HQ State</label>
					<input
						type="text"
						id="hq_state"
						name="hq_state"
						if company != nil && company.HqState.Valid {
							value={ company.HqState.String }
						}
						class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm px-3 py-2 border"
					/>
				</div>
			</div>
			<div class="flex justify-end space-x-3">
				<a href="/companies" class="rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50">
					Cancel
				</a>
				<button type="submit" class="rounded-md bg-indigo-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500">
					if isEdit {
						Update Company
					} else {
						Create Company
					}
				</button>
			</div>
		</form>
	</div>
}
